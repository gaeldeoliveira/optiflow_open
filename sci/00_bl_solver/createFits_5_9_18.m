function [fitresult, gof] = createFits(y_over_theta_vector, dudy_over_ue_vector)
%CREATEFITS(Y_OVER_THETA_VECTOR,DUDY_OVER_UE_VECTOR)
%  Create fits.
%
%  Data for 'Shear Fit Gaussian (9)' fit:
%      X Input : y_over_theta_vector
%      Y Output: dudy_over_ue_vector
%  Data for 'Shear Fit Gaussian (5)' fit:
%      X Input : y_over_theta_vector
%      Y Output: dudy_over_ue_vector
%  Data for 'Shear Fit Gaussian (18)' fit:
%      X Input : y_over_theta_vector
%      Y Output: dudy_over_ue_vector
%  Output:
%      fitresult : a cell-array of fit objects representing the fits.
%      gof : structure array with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 10-Nov-2014 01:25:36

%% Initialization.

% Initialize arrays to store fits and goodness-of-fit.
fitresult = cell( 3, 1 );
gof = struct( 'sse', cell( 3, 1 ), ...
    'rsquare', [], 'dfe', [], 'adjrsquare', [], 'rmse', [] );

%% Fit: 'Shear Fit Gaussian (9)'.
[xData, yData] = prepareCurveData( y_over_theta_vector, dudy_over_ue_vector );

% Set up fittype and options.
ft = fittype( 'a1*exp(-(b*(x-1))^2)+  a2*exp(-(b*(x-2))^2)+  a3*exp(-(b*(x-3))^2)+  a4*exp(-(b*(x-4))^2)+  a5*exp(-(b*(x-5))^2)+  a6*exp(-(b*(x-6))^2)+  a7*exp(-(b*(x-7))^2)+  a8*exp(-(b*(x-8))^2)+  a9*exp(-(b*(x-9))^2)+  c*exp(-(bc*(x))^2)', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.StartPoint = [0.421761282626275 0.915735525189067 0.792207329559554 0.959492426392903 0.655740699156587 0.678735154857773 0.757740130578333 0.743132468124916 0.392227019534168 0.0357116785741896 0.349983765984809 0.849129305868777];

% Fit model to data.
[fitresult{1}, gof(1)] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'Shear Fit Gaussian (9)' );
h = plot( fitresult{1}, xData, yData );
legend( h, 'dudy_over_ue_vector vs. y_over_theta_vector', 'Shear Fit Gaussian (9)', 'Location', 'NorthEast' );
% Label axes
xlabel y_over_theta_vector
ylabel dudy_over_ue_vector
grid on

%% Fit: 'Shear Fit Gaussian (5)'.
[xData, yData] = prepareCurveData( y_over_theta_vector, dudy_over_ue_vector );

% Set up fittype and options.
ft = fittype( 'a1*exp(-(b*(x-1))^2)+  a2*exp(-(b*(x-3))^2)+  a3*exp(-(b*(x-5))^2)+  a4*exp(-(b*(x-7))^2)+  a5*exp(-(b*(x-9))^2)+  c*exp(-(bc*(x))^2)', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.StartPoint = [0.381558457093008 0.765516788149002 0.795199901137063 0.186872604554379 0.489764395788231 0.747969969374534 0.929263623187228 0.421537599372726];

% Fit model to data.
[fitresult{2}, gof(2)] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'Shear Fit Gaussian (5)' );
h = plot( fitresult{2}, xData, yData );
legend( h, 'dudy_over_ue_vector vs. y_over_theta_vector', 'Shear Fit Gaussian (5)', 'Location', 'NorthEast' );
% Label axes
xlabel y_over_theta_vector
ylabel dudy_over_ue_vector
grid on

%% Fit: 'Shear Fit Gaussian (18)'.
[xData, yData] = prepareCurveData( y_over_theta_vector, dudy_over_ue_vector );

% Set up fittype and options.
ft = fittype( 'a1*exp(-(b*(x-.5))^2)+  a2*exp(-(b*(x-1))^2)+  a3*exp(-(b*(x-1.5))^2)+  a4*exp(-(b*(x-2))^2)+ a5*exp(-(b*(x-2.5))^2)+ a6*exp(-(b*(x-3))^2)+  a7*exp(-(b*(x-3.5))^2)+  a8*exp(-(b*(x-4))^2)+  a9*exp(-(b*(x-4.5))^2)+  a10*exp(-(b*(x-5.5))^2)+  a11*exp(-(b*(x-6))^2)+  a12*exp(-(b*(x-6.5))^2)+  a13*exp(-(b*(x-7))^2)+  a14*exp(-(b*(x-7.5))^2)+  a15*exp(-(b*(x-8))^2)+  a16*exp(-(b*(x-9))^2)+  a17*exp(-(b*(x-9.5))^2)+ a18*exp(-(b*(x-10))^2)+ c*exp(-(bc*(x))^2)', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.StartPoint = [0.162611735194631 0.505957051665142 0.890903252535798 0.547215529963803 0.149294005559057 0.257508254123736 0.840717255983663 0.254282178971531 0.814284826068816 0.616044676146639 0.118997681558377 0.498364051982143 0.959743958516081 0.340385726666133 0.585267750979777 0.223811939491137 0.751267059305653 0.255095115459269 0.576296457969121 0.243524968724989 0.114828461660687];

% Fit model to data.
[fitresult{3}, gof(3)] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'Shear Fit Gaussian (18)' );
h = plot( fitresult{3}, xData, yData );
legend( h, 'dudy_over_ue_vector vs. y_over_theta_vector', 'Shear Fit Gaussian (18)', 'Location', 'NorthEast' );
% Label axes
xlabel y_over_theta_vector
ylabel dudy_over_ue_vector
grid on


